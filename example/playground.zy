package main

type Direction enum
{
	Up = 1,
	Down = -1,
	Left,
	Right
}

type Point struct
{
	x, y: float32
}

func point_new(x, y: float32): Point {
	var self: Point
	self.x = x
	self.y = y
	return self
}

var origin = point_new(0:float32, 0:float32)
var origin2 = add(origin, Point{x: 1:float32, y: 2:float32})
var origin3 = foo(&origin2, 5:float32)

var axis = []Point{
	[0]: Point{}
}

func add(a, b: Point): Point {
	var res: Point
	res.x = a.x + b.x
	res.y = a.y + b.y
	return res
}

func add2(a, b: Point): Point {
	return Point {
		y: a.y + b.y,
		x: a.x + b.x,
	}
}

func foo(a: *Point, b: float32) {
	a.x *= b
	a.y *= b
}