// Here we list our tokens
#define TOKEN_LISTING \
	TOKEN(NONE, "<NONE>"), \
	TOKEN(ID, "<ID>"), \
	TOKEN(COMMENT, "<COMMENT>"), \
	TOKEN(STRING, "<STRING>"), \
	TOKEN(INTEGER, "<INTEGER>"), \
	TOKEN(FLOAT, "<FLOAT>"), \
	TOKEN(KEYWORDS__BEGIN, ""), \
	TOKEN(KEYWORD_FUNC, "func"), \
	TOKEN(KEYWORD_END, "end"), \
	TOKEN(KEYWORD_I8_ADD,  "i8.add"), \
	TOKEN(KEYWORD_I16_ADD, "i16.add"), \
	TOKEN(KEYWORD_I32_ADD, "i32.add"), \
	TOKEN(KEYWORD_I64_ADD, "i64.add"), \
	TOKEN(KEYWORD_U8_ADD,  "u8.add"), \
	TOKEN(KEYWORD_U16_ADD, "u16.add"), \
	TOKEN(KEYWORD_U32_ADD, "u32.add"), \
	TOKEN(KEYWORD_U64_ADD, "u64.add"), \
	TOKEN(KEYWORD_I8_SUB,  "i8.sub"), \
	TOKEN(KEYWORD_I16_SUB, "i16.sub"), \
	TOKEN(KEYWORD_I32_SUB, "i32.sub"), \
	TOKEN(KEYWORD_I64_SUB, "i64.sub"), \
	TOKEN(KEYWORD_U8_SUB,  "u8.sub"), \
	TOKEN(KEYWORD_U16_SUB, "u16.sub"), \
	TOKEN(KEYWORD_U32_SUB, "u32.sub"), \
	TOKEN(KEYWORD_U64_SUB, "u64.sub"), \
	TOKEN(KEYWORD_I8_MUL,  "i8.mul"), \
	TOKEN(KEYWORD_I16_MUL, "i16.mul"), \
	TOKEN(KEYWORD_I32_MUL, "i32.mul"), \
	TOKEN(KEYWORD_I64_MUL, "i64.mul"), \
	TOKEN(KEYWORD_U8_MUL,  "u8.mul"), \
	TOKEN(KEYWORD_U16_MUL, "u16.mul"), \
	TOKEN(KEYWORD_U32_MUL, "u32.mul"), \
	TOKEN(KEYWORD_U64_MUL, "u64.mul"), \
	TOKEN(KEYWORD_I8_DIV,  "i8.div"), \
	TOKEN(KEYWORD_I16_DIV, "i16.div"), \
	TOKEN(KEYWORD_I32_DIV, "i32.div"), \
	TOKEN(KEYWORD_I64_DIV, "i64.div"), \
	TOKEN(KEYWORD_U8_DIV,  "u8.div"), \
	TOKEN(KEYWORD_U16_DIV, "u16.div"), \
	TOKEN(KEYWORD_U32_DIV, "u32.div"), \
	TOKEN(KEYWORD_U64_DIV, "u64.div"), \
	TOKEN(KEYWORD_I8_MOD,  "i8.mod"), \
	TOKEN(KEYWORD_I16_MOD, "i16.mod"), \
	TOKEN(KEYWORD_I32_MOD, "i32.mod"), \
	TOKEN(KEYWORD_I64_MOD, "i64.mod"), \
	TOKEN(KEYWORD_U8_MOD,  "u8.mod"), \
	TOKEN(KEYWORD_U16_MOD, "u16.mod"), \
	TOKEN(KEYWORD_U32_MOD, "u32.mod"), \
	TOKEN(KEYWORD_U64_MOD, "u64.mod"), \
	TOKEN(KEYWORD_I8_EQ,  "i8.eq"), \
	TOKEN(KEYWORD_I16_EQ, "i16.eq"), \
	TOKEN(KEYWORD_I32_EQ, "i32.eq"), \
	TOKEN(KEYWORD_I64_EQ, "i64.eq"), \
	TOKEN(KEYWORD_U8_EQ,  "u8.eq"), \
	TOKEN(KEYWORD_U16_EQ, "u16.eq"), \
	TOKEN(KEYWORD_U32_EQ, "u32.eq"), \
	TOKEN(KEYWORD_U64_EQ, "u64.eq"), \
	TOKEN(KEYWORD_I8_LT,  "i8.lt"), \
	TOKEN(KEYWORD_I16_LT, "i16.lt"), \
	TOKEN(KEYWORD_I32_LT, "i32.lt"), \
	TOKEN(KEYWORD_I64_LT, "i64.lt"), \
	TOKEN(KEYWORD_U8_LT,  "u8.lt"), \
	TOKEN(KEYWORD_U16_LT, "u16.lt"), \
	TOKEN(KEYWORD_U32_LT, "u32.lt"), \
	TOKEN(KEYWORD_U64_LT, "u64.lt"), \
	TOKEN(KEYWORD_I8_GT,  "i8.gt"), \
	TOKEN(KEYWORD_I16_GT, "i16.gt"), \
	TOKEN(KEYWORD_I32_GT, "i32.gt"), \
	TOKEN(KEYWORD_I64_GT, "i64.gt"), \
	TOKEN(KEYWORD_U8_GT,  "u8.gt"), \
	TOKEN(KEYWORD_U16_GT, "u16.gt"), \
	TOKEN(KEYWORD_U32_GT, "u32.gt"), \
	TOKEN(KEYWORD_U64_GT, "u64.gt"), \
	TOKEN(KEYWORD_I8_LE,  "i8.le"), \
	TOKEN(KEYWORD_I16_LE, "i16.le"), \
	TOKEN(KEYWORD_I32_LE, "i32.le"), \
	TOKEN(KEYWORD_I64_LE, "i64.le"), \
	TOKEN(KEYWORD_U8_LE,  "u8.le"), \
	TOKEN(KEYWORD_U16_LE, "u16.le"), \
	TOKEN(KEYWORD_U32_LE, "u32.le"), \
	TOKEN(KEYWORD_U64_LE, "u64.le"), \
	TOKEN(KEYWORD_I8_GE,  "i8.ge"), \
	TOKEN(KEYWORD_I16_GE, "i16.ge"), \
	TOKEN(KEYWORD_I32_GE, "i32.ge"), \
	TOKEN(KEYWORD_I64_GE, "i64.ge"), \
	TOKEN(KEYWORD_U8_GE,  "u8.ge"), \
	TOKEN(KEYWORD_U16_GE, "u16.ge"), \
	TOKEN(KEYWORD_U32_GE, "u32.ge"), \
	TOKEN(KEYWORD_U64_GE, "u64.ge"), \
	TOKEN(KEYWORD_I8_CONST,  "i8.const"), \
	TOKEN(KEYWORD_I16_CONST, "i16.const"), \
	TOKEN(KEYWORD_I32_CONST, "i32.const"), \
	TOKEN(KEYWORD_I64_CONST, "i64.const"), \
	TOKEN(KEYWORD_U8_CONST,  "u8.const"), \
	TOKEN(KEYWORD_U16_CONST, "u16.const"), \
	TOKEN(KEYWORD_U32_CONST, "u32.const"), \
	TOKEN(KEYWORD_U64_CONST, "u64.const"), \
	TOKEN(KEYWORD_I16_X8, "i16.x8"), \
	TOKEN(KEYWORD_I32_X8, "i32.x8"), \
	TOKEN(KEYWORD_I32_X16, "i32.x16"), \
	TOKEN(KEYWORD_I64_X8, "i64.x8"), \
	TOKEN(KEYWORD_I64_X16, "i64.x16"), \
	TOKEN(KEYWORD_I64_X32, "i64.x32"), \
	TOKEN(KEYWORD_U16_X8, "u16.x8"), \
	TOKEN(KEYWORD_U32_X8, "u32.x8"), \
	TOKEN(KEYWORD_U32_X16, "u32.x16"), \
	TOKEN(KEYWORD_U64_X8, "u64.x8"), \
	TOKEN(KEYWORD_U64_X16, "u64.x16"), \
	TOKEN(KEYWORD_U64_X32, "u64.x32"), \
	TOKEN(KEYWORD_JT, "jt"), \
	TOKEN(KEYWORD_JF, "jf"), \
	TOKEN(KEYWORD_JUMP, "jump"), \
	TOKEN(KEYWORD_HALT, "halt"), \
	TOKEN(KEYWORDS__END, ""),
